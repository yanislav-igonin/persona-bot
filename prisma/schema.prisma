// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id
  username  String?  @unique
  firstName String?
  lastName  String?
  language  String?
  createdAt DateTime @default(now())

  replies Reply[]

  @@map("users")
}

model Chat {
  id        String   @id
  name      String
  type      String
  isAllowed Boolean  @default(false)
  createdAt DateTime @default(now())

  replies Reply[]
  dialogs  Dialog[]

  @@map("chats")
}

model Reply {
  id        String   @id @default(cuid())
  input     String
  output    String
  createdAt DateTime @default(now())
  userId    String
  chatId    String
  botRole   String

  user User @relation(fields: [userId], references: [id])
  chat Chat @relation(fields: [chatId], references: [id])

  @@map("replies")
}

model Dialog {
  id        Int      @id @default(autoincrement())
  chatId    String
  createdAt DateTime @default(now())

  chat      Chat     @relation(fields: [chatId], references: [id])
  messages  Message[]

  @@map("dialogs")
}

model Message {
  id         Int      @id @default(autoincrement())
  telegramId String
  text       String
  createdAt  DateTime @default(now())
  userId     String   // use "0" for bot messages
  botRole    String?  // NULL for user messages
  dialogId   Int

  dialog     Dialog   @relation(fields: [dialogId], references: [id])

  // Protect uniqueness within a dialog (Telegram ids are unique per chat; dialog is subset)
  @@unique([dialogId, telegramId], name: "dialog_message_unique")
  @@index([telegramId])
  @@index([dialogId, createdAt])
  @@map("messages")
}
